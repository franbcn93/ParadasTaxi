{"version":3,"sources":["components/Map.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["Map","style","width","title","src","height","Error","mensaje","className","App","useState","error","setError","consultarAPI","a","fetch","api","json","map","nombre","agrupacion","addresses","district_name","carrer","address_name","street_number_1","itemStreet","document","createElement","textNode","createTextNode","appendChild","getElementById","response","console","data","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0NAGaA,EAAM,WACjB,OACE,cAAC,WAAD,UACE,qBAAKC,MAAO,CAAEC,MAAO,QAArB,SACE,wBACEC,MAAM,0BACNC,IAAI,gFACJF,MAAM,OACNG,OAAO,aCTJC,EAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,8BACE,mBAAGC,UAAU,2CAAb,SAAyDD,OC0DhDE,MA3Df,WACE,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,uCAAG,4BAAAC,EAAA,+EAICC,MAAM,4IAJP,cAIXC,EAJW,gBASGA,EAAIC,OATP,cAYXC,KAAI,SAACC,GAET,IAAMC,EAAaD,EAAOE,UAAU,GAEpC,GAAiC,kBAA7BD,EAAWE,cAAgC,CAC7C,IAAMC,EACJH,EAAWI,aAAe,WAAUJ,EAAWK,gBAE7CC,EAAaC,SAASC,cAAc,MACpCC,EAAWF,SAASG,eAAeP,GACvCG,EAAWK,YAAYF,GACvBF,SAASK,eAAe,QAAQD,YAAYL,GAE9C,OAAO,QAzBQ,kDA6Bb,KAAIO,UACNC,QAAQvB,MAAM,uBAAwB,KAAIsB,SAASE,MACnDvB,GAAS,KAGTsB,QAAQvB,MAAM,oBAAd,MACAC,GAAS,IAnCM,0DAAH,qDA6ClB,OAJAwB,qBAAU,WACRvB,MACC,IAGD,eAAC,WAAD,WACE,kFACA,cAAC,EAAD,IACCF,EACC,cAAC,EAAD,CAAOJ,QAAQ,yGACb,SC9CK8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASK,eAAe,SAM1BK,M","file":"static/js/main.30eaba71.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\n// Parada Taxi\nexport const Map = () => {\n  return (\n    <Fragment>\n      <div style={{ width: \"100%\" }}>\n        <iframe\n          title=\"Mapa de paradas de taxi\"\n          src=\"https://www.google.com/maps/d/u/0/embed?mid=1gKqRjP_LJZ0-9QD8Vk_VUTjamej5vlfF\"\n          width=\"100%\"\n          height=\"480\"\n        ></iframe>\n      </div>\n    </Fragment>\n  );\n};\n","import React from \"react\";\n\nexport const Error = ({ mensaje }) => {\n  return (\n    <div>\n      <p className=\"my-3 p-4 text-center alert alert-primary\">{mensaje}</p>\n    </div>\n  );\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Map } from \"./components/Map\";\nimport { Error } from \"./components/Error\";\n\nfunction App() {\n  const [error, setError] = useState(false);\n\n  const consultarAPI = async () => {\n    // Consultamos la API\n    try {\n      // Make a request\n      const api = await fetch(\n        `http://www.bcn.cat/tercerlloc/files/transports/transports-addicionals/opendatabcn_transports_transports-addicionals_parades-taxi-js.json`\n      );\n\n      // Obtenemos la llamada\n      const frase = await api.json();\n\n      // Solo quiero saber la ubicación de las paradas del distrito de Sant Martí\n      frase.map((nombre) => {\n        // Desestructuramos la API\n        const agrupacion = nombre.addresses[0];\n        // Si es del distrito ... \"Sant Martí\"\n        if (agrupacion.district_name === \"Sant Martí\") {\n          const carrer =\n            agrupacion.address_name + \", nº \" + agrupacion.street_number_1;\n          // Creamos el elemento y lo añadimos a la raíz\n          let itemStreet = document.createElement(\"li\");\n          let textNode = document.createTextNode(carrer);\n          itemStreet.appendChild(textNode);\n          document.getElementById(\"root\").appendChild(itemStreet);\n        }\n        return null;\n      });\n      // Sino es correcta la resuesta enviamos un mensaje de Error\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Failed with response\", err.response.data);\n        setError(true);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error(\"Failed in general\", err);\n        setError(true);\n      }\n    }\n  };\n\n  // Cargar las calles\n  useEffect(() => {\n    consultarAPI();\n  }, []);\n\n  return (\n    <Fragment>\n      <h1>Paradas de taxi en el distrito de Sant Martí:</h1>\n      <Map />\n      {error ? (\n        <Error mensaje=\"Falló con la respuesta a la API, puede ser debido a que es una página insegura al no ser HTTPS\" />\n      ) : null}\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}